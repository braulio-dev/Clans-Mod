buildscript {

    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }

}

plugins {
    id 'net.minecraftforge.gradle.forge' version '2.1-SNAPSHOT'
    id 'java'
}

version = '1.0.0'
group = "club.mineplex.clans"
archivesBaseName = "ClansMod"

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.spongepowered.mixin'

group = 'club.mineplex.clans'

// The below line is for version checkers <= 1.4.2
//version = "1.5.5"

// Java plugin settings
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

minecraft {
    version = "${project.minecraftVersion}-${project.forgeVersion}"
    runDir = "run"

    mappings = "${project.mappings}"
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = "https://plugins.gradle.org/m2/" }
    maven { url = 'http://files.minecraftforge.net/maven' }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    maven {
        name 'JitPack'
        url 'https://jitpack.io'
    }
}
dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'commons-io'
        exclude module: 'guava'
    }

    compile fileTree(dir: 'libs', include: ['*.jar'])
    shadow fileTree(dir: 'libs', include: ['*.jar'])
}

jar {
    // Set the archive name here instead of in shadowJar because ForgeGradle needs it when re-obfuscating the jar.
    archiveName = project.modName + "-" + version + "-for-MC-1.8.9.jar"
    // Disable the default jar task and use shadowJar instead to shade the libraries into the jar.
    enabled = false
}

shadowJar {
    archiveName = tasks.jar.archiveName
    classifier = ''
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            'FMLCorePlugin': 'club.mineplex.clans.asm.FMLLoadingPlugin',
            'FMLCorePluginContainsMod': 'true',
            "MixinConfigs": "clansmod.mixins.json",
            'ForceLoadAsMod': 'true',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
    )

    exclude('dummyThing')
    exclude('META-INF/maven/')
    exclude('META-INF/nar/')
    exclude('module-info.class')
    exclude('META-INF/versions/')
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task copyLicenses (type: Copy) {
    from(project.projectDir) {
        include('LICENSE')
        include('NOTICE')
        include('dependencyLicenses/**')
    }
    into(sourceSets.main.output.resourcesDir)
}

test {
    useJUnitPlatform()
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "clansmod.refmap.json"
}

tasks.jar.dependsOn(tasks.copyLicenses)
tasks.reobfJar.dependsOn(tasks.shadowJar)